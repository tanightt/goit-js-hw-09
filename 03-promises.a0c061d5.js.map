{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,IAAKJ,SAASC,cAAc,oBAG9B,IAAIF,MAAEM,EAAKH,KAAEI,EAAIH,OAAEI,EAAMH,IAAEI,GAAQV,EAEnC,SAASW,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,EAAUX,MAAAY,IAEpBG,EAAO,C,SAAEJ,EAAUX,MAAAY,GAAQ,GAE5BA,EAAM,G,CAKbH,EAAIW,iBAAiB,SAErB,SAAkBC,GAChBA,EAAEC,iBAEF,IAAIC,EAAaC,OAAOlB,EAAMmB,OAC1BC,EAAYF,OAAOjB,EAAKkB,OACxBE,EAAcH,OAAOhB,EAAOiB,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,IAChClB,EAAckB,EAAGL,GAClBM,MAAK,EAAClB,SAAEA,EAAUX,MAAA8B,MACjBC,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAqBtB,QAAiBmB,MAAW,CAAGI,SAAS,GAAO,IAE7FC,OAAM,EAACxB,SAAEA,EAAUX,MAAAoC,MAClBL,EAAAlC,GAASmC,OAAOK,QAAQ,sBAAoB1B,QAAeyB,MAAW,CAAGF,SAAS,GAAO,IAEzFX,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  btn: document.querySelector('[type=\"submit\"]'),\n}\n\nlet { delay, step, amount, btn } = refs;\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {    \n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  })\n  return promise;\n}\n\nbtn.addEventListener('click', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  let delayInput = Number(delay.value);\n  let stepInput = Number(step.value);\n  let amountInput = Number(amount.value);\n\n  for (let i = 1; i <= amountInput; i++) {\n    createPromise(i, delayInput)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {useIcon: false});\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {useIcon: false});\n  });\n    delayInput += stepInput;\n  }\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","delay","document","querySelector","step","amount","btn","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$btn","$47d4ff9957288465$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delayInput","Number","value","stepInput","amountInput","i","then","delay2","$parcel$interopDefault","Notify","success","useIcon","catch","delay3","failure"],"version":3,"file":"03-promises.a0c061d5.js.map"}