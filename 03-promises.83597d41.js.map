{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,IAAKJ,SAASC,cAAc,oBAGxBI,EAA6BP,EAA7BC,MAAOO,EAAsBR,EAAtBI,KAAMK,EAAgBT,EAAhBK,OAEnB,SAASK,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUV,MAAAW,IAEpBG,EAAO,CAAEJ,WAAUV,MAAAW,G,GAEpBA,E,IAX4BZ,EAARM,IAgBvBc,iBAAiB,SAErB,SAAkBC,GAChBA,EAAEC,iBAEFC,WAAaC,OAAOjB,EAAMkB,OAC1BC,UAAYF,OAAOhB,EAAKiB,OACxBE,YAAcH,OAAOf,EAAOgB,OAE5B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,YAAaC,IAChClB,EAAckB,EAAGL,YAClBM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUoB,EAAKD,EAAL7B,MACjB+B,EAAAlC,GAASmC,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANJ,EAAM,MAAK,CAACK,SAAS,G,IAEtFC,OAAM,SAAAP,G,IAAGnB,EAAQmB,EAARnB,SAAU2B,EAAKR,EAAL7B,MAClB+B,EAAAlC,GAASmC,OAAOM,QAAQ,sBAAqCJ,OAAfxB,EAAS,QAAYwB,OAANG,EAAM,MAAK,CAACF,SAAS,G,IAElFb,YAAcG,S","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  btn: document.querySelector('[type=\"submit\"]'),\n}\n\nlet { delay, step, amount, btn } = refs;\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {    \n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  })\n  return promise;\n}\n\nbtn.addEventListener('click', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  delayInput = Number(delay.value);\n  stepInput = Number(step.value);\n  amountInput = Number(amount.value);\n\n  for (let i = 1; i <= amountInput; i++) {\n    createPromise(i, delayInput)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {useIcon: false});\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {useIcon: false});\n  });\n    delayInput += stepInput;\n  }\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","btn","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delayInput","Number","value","stepInput","amountInput","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","useIcon","catch","delay3","failure"],"version":3,"file":"03-promises.83597d41.js.map"}